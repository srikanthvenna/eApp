/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.rknowsys.eapp.hrm.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.rknowsys.eapp.hrm.model.BulkUpdate;
import com.rknowsys.eapp.hrm.model.BulkUpdateModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the BulkUpdate service. Represents a row in the &quot;hrm_BulkUpdate&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.rknowsys.eapp.hrm.model.BulkUpdateModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link BulkUpdateImpl}.
 * </p>
 *
 * @author rknowsys
 * @see BulkUpdateImpl
 * @see com.rknowsys.eapp.hrm.model.BulkUpdate
 * @see com.rknowsys.eapp.hrm.model.BulkUpdateModel
 * @generated
 */
public class BulkUpdateModelImpl extends BaseModelImpl<BulkUpdate>
	implements BulkUpdateModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a bulk update model instance should use the {@link com.rknowsys.eapp.hrm.model.BulkUpdate} interface instead.
	 */
	public static final String TABLE_NAME = "hrm_BulkUpdate";
	public static final Object[][] TABLE_COLUMNS = {
			{ "bulkupdateId", Types.BIGINT },
			{ "employeeId", Types.BIGINT },
			{ "employeeNo", Types.BIGINT },
			{ "employeeName", Types.VARCHAR },
			{ "employmentStatus", Types.VARCHAR },
			{ "jobTitle", Types.VARCHAR },
			{ "jobtitleId", Types.BIGINT },
			{ "subunit", Types.VARCHAR },
			{ "subunitId", Types.BIGINT },
			{ "location", Types.VARCHAR },
			{ "locationId", Types.BIGINT },
			{ "workshift", Types.VARCHAR },
			{ "shiftId", Types.BIGINT },
			{ "joiningDate", Types.TIMESTAMP },
			{ "supervisor", Types.VARCHAR },
			{ "empStatus", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table hrm_BulkUpdate (bulkupdateId LONG not null primary key,employeeId LONG,employeeNo LONG,employeeName VARCHAR(75) null,employmentStatus VARCHAR(75) null,jobTitle VARCHAR(75) null,jobtitleId LONG,subunit VARCHAR(75) null,subunitId LONG,location VARCHAR(75) null,locationId LONG,workshift VARCHAR(75) null,shiftId LONG,joiningDate DATE null,supervisor VARCHAR(75) null,empStatus LONG)";
	public static final String TABLE_SQL_DROP = "drop table hrm_BulkUpdate";
	public static final String ORDER_BY_JPQL = " ORDER BY bulkUpdate.bulkupdateId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY hrm_BulkUpdate.bulkupdateId ASC";
	public static final String DATA_SOURCE = "hrmDataSource";
	public static final String SESSION_FACTORY = "hrmSessionFactory";
	public static final String TX_MANAGER = "hrmTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.rknowsys.eapp.hrm.model.BulkUpdate"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.rknowsys.eapp.hrm.model.BulkUpdate"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.rknowsys.eapp.hrm.model.BulkUpdate"));

	public BulkUpdateModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _bulkupdateId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setBulkupdateId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _bulkupdateId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return BulkUpdate.class;
	}

	@Override
	public String getModelClassName() {
		return BulkUpdate.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("bulkupdateId", getBulkupdateId());
		attributes.put("employeeId", getEmployeeId());
		attributes.put("employeeNo", getEmployeeNo());
		attributes.put("employeeName", getEmployeeName());
		attributes.put("employmentStatus", getEmploymentStatus());
		attributes.put("jobTitle", getJobTitle());
		attributes.put("jobtitleId", getJobtitleId());
		attributes.put("subunit", getSubunit());
		attributes.put("subunitId", getSubunitId());
		attributes.put("location", getLocation());
		attributes.put("locationId", getLocationId());
		attributes.put("workshift", getWorkshift());
		attributes.put("shiftId", getShiftId());
		attributes.put("joiningDate", getJoiningDate());
		attributes.put("supervisor", getSupervisor());
		attributes.put("empStatus", getEmpStatus());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long bulkupdateId = (Long)attributes.get("bulkupdateId");

		if (bulkupdateId != null) {
			setBulkupdateId(bulkupdateId);
		}

		Long employeeId = (Long)attributes.get("employeeId");

		if (employeeId != null) {
			setEmployeeId(employeeId);
		}

		Long employeeNo = (Long)attributes.get("employeeNo");

		if (employeeNo != null) {
			setEmployeeNo(employeeNo);
		}

		String employeeName = (String)attributes.get("employeeName");

		if (employeeName != null) {
			setEmployeeName(employeeName);
		}

		String employmentStatus = (String)attributes.get("employmentStatus");

		if (employmentStatus != null) {
			setEmploymentStatus(employmentStatus);
		}

		String jobTitle = (String)attributes.get("jobTitle");

		if (jobTitle != null) {
			setJobTitle(jobTitle);
		}

		Long jobtitleId = (Long)attributes.get("jobtitleId");

		if (jobtitleId != null) {
			setJobtitleId(jobtitleId);
		}

		String subunit = (String)attributes.get("subunit");

		if (subunit != null) {
			setSubunit(subunit);
		}

		Long subunitId = (Long)attributes.get("subunitId");

		if (subunitId != null) {
			setSubunitId(subunitId);
		}

		String location = (String)attributes.get("location");

		if (location != null) {
			setLocation(location);
		}

		Long locationId = (Long)attributes.get("locationId");

		if (locationId != null) {
			setLocationId(locationId);
		}

		String workshift = (String)attributes.get("workshift");

		if (workshift != null) {
			setWorkshift(workshift);
		}

		Long shiftId = (Long)attributes.get("shiftId");

		if (shiftId != null) {
			setShiftId(shiftId);
		}

		Date joiningDate = (Date)attributes.get("joiningDate");

		if (joiningDate != null) {
			setJoiningDate(joiningDate);
		}

		String supervisor = (String)attributes.get("supervisor");

		if (supervisor != null) {
			setSupervisor(supervisor);
		}

		Long empStatus = (Long)attributes.get("empStatus");

		if (empStatus != null) {
			setEmpStatus(empStatus);
		}
	}

	@Override
	public long getBulkupdateId() {
		return _bulkupdateId;
	}

	@Override
	public void setBulkupdateId(long bulkupdateId) {
		_bulkupdateId = bulkupdateId;
	}

	@Override
	public long getEmployeeId() {
		return _employeeId;
	}

	@Override
	public void setEmployeeId(long employeeId) {
		_employeeId = employeeId;
	}

	@Override
	public long getEmployeeNo() {
		return _employeeNo;
	}

	@Override
	public void setEmployeeNo(long employeeNo) {
		_employeeNo = employeeNo;
	}

	@Override
	public String getEmployeeName() {
		if (_employeeName == null) {
			return StringPool.BLANK;
		}
		else {
			return _employeeName;
		}
	}

	@Override
	public void setEmployeeName(String employeeName) {
		_employeeName = employeeName;
	}

	@Override
	public String getEmploymentStatus() {
		if (_employmentStatus == null) {
			return StringPool.BLANK;
		}
		else {
			return _employmentStatus;
		}
	}

	@Override
	public void setEmploymentStatus(String employmentStatus) {
		_employmentStatus = employmentStatus;
	}

	@Override
	public String getJobTitle() {
		if (_jobTitle == null) {
			return StringPool.BLANK;
		}
		else {
			return _jobTitle;
		}
	}

	@Override
	public void setJobTitle(String jobTitle) {
		_jobTitle = jobTitle;
	}

	@Override
	public long getJobtitleId() {
		return _jobtitleId;
	}

	@Override
	public void setJobtitleId(long jobtitleId) {
		_jobtitleId = jobtitleId;
	}

	@Override
	public String getSubunit() {
		if (_subunit == null) {
			return StringPool.BLANK;
		}
		else {
			return _subunit;
		}
	}

	@Override
	public void setSubunit(String subunit) {
		_subunit = subunit;
	}

	@Override
	public long getSubunitId() {
		return _subunitId;
	}

	@Override
	public void setSubunitId(long subunitId) {
		_subunitId = subunitId;
	}

	@Override
	public String getLocation() {
		if (_location == null) {
			return StringPool.BLANK;
		}
		else {
			return _location;
		}
	}

	@Override
	public void setLocation(String location) {
		_location = location;
	}

	@Override
	public long getLocationId() {
		return _locationId;
	}

	@Override
	public void setLocationId(long locationId) {
		_locationId = locationId;
	}

	@Override
	public String getWorkshift() {
		if (_workshift == null) {
			return StringPool.BLANK;
		}
		else {
			return _workshift;
		}
	}

	@Override
	public void setWorkshift(String workshift) {
		_workshift = workshift;
	}

	@Override
	public long getShiftId() {
		return _shiftId;
	}

	@Override
	public void setShiftId(long shiftId) {
		_shiftId = shiftId;
	}

	@Override
	public Date getJoiningDate() {
		return _joiningDate;
	}

	@Override
	public void setJoiningDate(Date joiningDate) {
		_joiningDate = joiningDate;
	}

	@Override
	public String getSupervisor() {
		if (_supervisor == null) {
			return StringPool.BLANK;
		}
		else {
			return _supervisor;
		}
	}

	@Override
	public void setSupervisor(String supervisor) {
		_supervisor = supervisor;
	}

	@Override
	public long getEmpStatus() {
		return _empStatus;
	}

	@Override
	public void setEmpStatus(long empStatus) {
		_empStatus = empStatus;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			BulkUpdate.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public BulkUpdate toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (BulkUpdate)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		BulkUpdateImpl bulkUpdateImpl = new BulkUpdateImpl();

		bulkUpdateImpl.setBulkupdateId(getBulkupdateId());
		bulkUpdateImpl.setEmployeeId(getEmployeeId());
		bulkUpdateImpl.setEmployeeNo(getEmployeeNo());
		bulkUpdateImpl.setEmployeeName(getEmployeeName());
		bulkUpdateImpl.setEmploymentStatus(getEmploymentStatus());
		bulkUpdateImpl.setJobTitle(getJobTitle());
		bulkUpdateImpl.setJobtitleId(getJobtitleId());
		bulkUpdateImpl.setSubunit(getSubunit());
		bulkUpdateImpl.setSubunitId(getSubunitId());
		bulkUpdateImpl.setLocation(getLocation());
		bulkUpdateImpl.setLocationId(getLocationId());
		bulkUpdateImpl.setWorkshift(getWorkshift());
		bulkUpdateImpl.setShiftId(getShiftId());
		bulkUpdateImpl.setJoiningDate(getJoiningDate());
		bulkUpdateImpl.setSupervisor(getSupervisor());
		bulkUpdateImpl.setEmpStatus(getEmpStatus());

		bulkUpdateImpl.resetOriginalValues();

		return bulkUpdateImpl;
	}

	@Override
	public int compareTo(BulkUpdate bulkUpdate) {
		long primaryKey = bulkUpdate.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof BulkUpdate)) {
			return false;
		}

		BulkUpdate bulkUpdate = (BulkUpdate)obj;

		long primaryKey = bulkUpdate.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<BulkUpdate> toCacheModel() {
		BulkUpdateCacheModel bulkUpdateCacheModel = new BulkUpdateCacheModel();

		bulkUpdateCacheModel.bulkupdateId = getBulkupdateId();

		bulkUpdateCacheModel.employeeId = getEmployeeId();

		bulkUpdateCacheModel.employeeNo = getEmployeeNo();

		bulkUpdateCacheModel.employeeName = getEmployeeName();

		String employeeName = bulkUpdateCacheModel.employeeName;

		if ((employeeName != null) && (employeeName.length() == 0)) {
			bulkUpdateCacheModel.employeeName = null;
		}

		bulkUpdateCacheModel.employmentStatus = getEmploymentStatus();

		String employmentStatus = bulkUpdateCacheModel.employmentStatus;

		if ((employmentStatus != null) && (employmentStatus.length() == 0)) {
			bulkUpdateCacheModel.employmentStatus = null;
		}

		bulkUpdateCacheModel.jobTitle = getJobTitle();

		String jobTitle = bulkUpdateCacheModel.jobTitle;

		if ((jobTitle != null) && (jobTitle.length() == 0)) {
			bulkUpdateCacheModel.jobTitle = null;
		}

		bulkUpdateCacheModel.jobtitleId = getJobtitleId();

		bulkUpdateCacheModel.subunit = getSubunit();

		String subunit = bulkUpdateCacheModel.subunit;

		if ((subunit != null) && (subunit.length() == 0)) {
			bulkUpdateCacheModel.subunit = null;
		}

		bulkUpdateCacheModel.subunitId = getSubunitId();

		bulkUpdateCacheModel.location = getLocation();

		String location = bulkUpdateCacheModel.location;

		if ((location != null) && (location.length() == 0)) {
			bulkUpdateCacheModel.location = null;
		}

		bulkUpdateCacheModel.locationId = getLocationId();

		bulkUpdateCacheModel.workshift = getWorkshift();

		String workshift = bulkUpdateCacheModel.workshift;

		if ((workshift != null) && (workshift.length() == 0)) {
			bulkUpdateCacheModel.workshift = null;
		}

		bulkUpdateCacheModel.shiftId = getShiftId();

		Date joiningDate = getJoiningDate();

		if (joiningDate != null) {
			bulkUpdateCacheModel.joiningDate = joiningDate.getTime();
		}
		else {
			bulkUpdateCacheModel.joiningDate = Long.MIN_VALUE;
		}

		bulkUpdateCacheModel.supervisor = getSupervisor();

		String supervisor = bulkUpdateCacheModel.supervisor;

		if ((supervisor != null) && (supervisor.length() == 0)) {
			bulkUpdateCacheModel.supervisor = null;
		}

		bulkUpdateCacheModel.empStatus = getEmpStatus();

		return bulkUpdateCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(33);

		sb.append("{bulkupdateId=");
		sb.append(getBulkupdateId());
		sb.append(", employeeId=");
		sb.append(getEmployeeId());
		sb.append(", employeeNo=");
		sb.append(getEmployeeNo());
		sb.append(", employeeName=");
		sb.append(getEmployeeName());
		sb.append(", employmentStatus=");
		sb.append(getEmploymentStatus());
		sb.append(", jobTitle=");
		sb.append(getJobTitle());
		sb.append(", jobtitleId=");
		sb.append(getJobtitleId());
		sb.append(", subunit=");
		sb.append(getSubunit());
		sb.append(", subunitId=");
		sb.append(getSubunitId());
		sb.append(", location=");
		sb.append(getLocation());
		sb.append(", locationId=");
		sb.append(getLocationId());
		sb.append(", workshift=");
		sb.append(getWorkshift());
		sb.append(", shiftId=");
		sb.append(getShiftId());
		sb.append(", joiningDate=");
		sb.append(getJoiningDate());
		sb.append(", supervisor=");
		sb.append(getSupervisor());
		sb.append(", empStatus=");
		sb.append(getEmpStatus());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(52);

		sb.append("<model><model-name>");
		sb.append("com.rknowsys.eapp.hrm.model.BulkUpdate");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>bulkupdateId</column-name><column-value><![CDATA[");
		sb.append(getBulkupdateId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>employeeId</column-name><column-value><![CDATA[");
		sb.append(getEmployeeId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>employeeNo</column-name><column-value><![CDATA[");
		sb.append(getEmployeeNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>employeeName</column-name><column-value><![CDATA[");
		sb.append(getEmployeeName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>employmentStatus</column-name><column-value><![CDATA[");
		sb.append(getEmploymentStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>jobTitle</column-name><column-value><![CDATA[");
		sb.append(getJobTitle());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>jobtitleId</column-name><column-value><![CDATA[");
		sb.append(getJobtitleId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>subunit</column-name><column-value><![CDATA[");
		sb.append(getSubunit());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>subunitId</column-name><column-value><![CDATA[");
		sb.append(getSubunitId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>location</column-name><column-value><![CDATA[");
		sb.append(getLocation());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>locationId</column-name><column-value><![CDATA[");
		sb.append(getLocationId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>workshift</column-name><column-value><![CDATA[");
		sb.append(getWorkshift());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>shiftId</column-name><column-value><![CDATA[");
		sb.append(getShiftId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>joiningDate</column-name><column-value><![CDATA[");
		sb.append(getJoiningDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>supervisor</column-name><column-value><![CDATA[");
		sb.append(getSupervisor());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>empStatus</column-name><column-value><![CDATA[");
		sb.append(getEmpStatus());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = BulkUpdate.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			BulkUpdate.class
		};
	private long _bulkupdateId;
	private long _employeeId;
	private long _employeeNo;
	private String _employeeName;
	private String _employmentStatus;
	private String _jobTitle;
	private long _jobtitleId;
	private String _subunit;
	private long _subunitId;
	private String _location;
	private long _locationId;
	private String _workshift;
	private long _shiftId;
	private Date _joiningDate;
	private String _supervisor;
	private long _empStatus;
	private BulkUpdate _escapedModel;
}